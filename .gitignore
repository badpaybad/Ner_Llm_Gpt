# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
test_ho_ten/config.cfg
test_ho_ten/meta.json
test_ho_ten/tokenizer
test_ho_ten/ner/cfg
test_ho_ten/ner/model
test_ho_ten/ner/moves
test_ho_ten/vocab/key2row
test_ho_ten/vocab/lookups.bin
test_ho_ten/vocab/strings.json
test_ho_ten/vocab/vectors
test_ho_ten/vocab/vectors.cfg
**/**.keras
**/logs/**
**/logsmnist/**
gpt2usage/gpt2_trained_models/gpt2_medium_joker_0_test.pt
gpt2usage/gpt2_trained_models/gpt2_medium_joker_0.pt
gpt2usage/gpt2_trained_models/gpt2_medium_joker_1.pt
gpt2usage/generated_gpt2_medium_joker_4.pt.jokes
gpt2usage/gpt2_trained_models/gpt2_medium_joker_2.pt
gpt2usage/gpt2_trained_models/gpt2_medium_joker_4.pt
gpt2usage/gpt2_trained_models/gpt2_medium_joker_3.pt
OpenAI.txt
mistralvn/*.txt
**/Vistral-7B-Chat/**
mistralvn/amdgpu-install_6.0.60003-1_all.deb
amdgpu-install_6.0.60003-1_all.debug
chatgpt4api/config.py
amdgpu-install_6.0.60003-1_all.deb
**/bin/**
**.gguf
**/bin.gpu/**
mediapipe/exported_model/**
**/train-val/**
**/hannomdataset/**
**/chunomdataset/**
**/exported_model_1000epoch/**
mediapipe/updated_resnet100.tflite
gemma/test.py
mediapipe/exported_model1/float_ckpt.data-00000-of-00001
mediapipe/exported_model1/float_ckpt.index
mediapipe/exported_model1/metadata.json
mediapipe/exported_model1/model.tflite
mediapipe/face_detect_live/config.json
mediapipe/face_detect_live/model_1.bin
mediapipe/face_detect_live/model_1.param
mediapipe/face_detect_live/model_2.bin
mediapipe/face_detect_live/model_2.param
mediapipe/face_detection/det1.bin
mediapipe/face_detection/det1.param
mediapipe/face_detection/det2.bin
mediapipe/face_detection/det2.param
mediapipe/face_detection/det3.bin
mediapipe/face_detection/det3.param
mediapipe/face_extract_feature/face.bin
mediapipe/face_extract_feature/face.param
mediapipe/face_extract_feature/model.tflite
deepfacefake/weights/1 (1).jpg
deepfacefake/weights/1 (2).jpg
deepfacefake/weights/1 (3).jpg
deepfacefake/weights/1 (4).jpg
deepfacefake/weights/1 (5).jpg
deepfacefake/weights/1 (6).jpg
deepfacefake/weights/coco.names
deepfacefake/weights/dlib_face_recognition_resnet_model_v1.dat
deepfacefake/weights/download.png
deepfacefake/weights/du2.png
deepfacefake/weights/ducam1.jpg
deepfacefake/weights/ducmnd.jpg
deepfacefake/weights/dunp.png
deepfacefake/weights/haarcascade_eye_tree_eyeglasses.xml
deepfacefake/weights/haarcascade_eye.xml
deepfacefake/weights/haarcascade_frontalface_default.xml
deepfacefake/weights/haarcascade_lefteye_2splits.xml
deepfacefake/weights/haarcascade_mcs_mouth.xml
deepfacefake/weights/haarcascade_mcs_nose.xml
deepfacefake/weights/haarcascade_righteye_2splits.xml
deepfacefake/weights/haarcascade_smile.xml
deepfacefake/weights/insightface-resnet100.onnx
deepfacefake/weights/mmod_human_face_detector.dat
deepfacefake/weights/openpose_pose_coco.prototxt
deepfacefake/weights/pose_deploy.prototxt
deepfacefake/weights/pose_iter_102000.caffemodel
deepfacefake/weights/pose_iter_440000.caffemodel
deepfacefake/weights/print-attack_ycrcb_luv_extraTreesClassifier.pkl
deepfacefake/weights/replay-attack_ycrcb_luv_extraTreesClassifier.pkl
deepfacefake/weights/shape_predictor_5_face_landmarks.dat
deepfacefake/weights/shape_predictor_68_face_landmarks.dat
deepfacefake/weights/The-106-point-landmark-make-up.png
deepfacefake/weights/urldownload.txt
deepfacefake/weights/wav2vec_large.pt
deepfacefake/weights/wav2vec2_fairseq_base_ls960_asr_ls960.pth
deepfacefake/weights/yolov4.cfg
deepfacefake/weights/yolov4.weights
deepfacefake/weights/models/updated_resnet100.onnx
deepfacefake/weights/models/buffalo_l/2d106det.onnx
deepfacefake/weights/models/buffalo_l/det_10g.onnx
deepfacefake/weights/vncorenlp/VnCoreNLP-1.2.jar
deepfacefake/weights/vncorenlp/models/dep/vi-dep.xz
deepfacefake/weights/vncorenlp/models/ner/vi-500brownclusters.xz
deepfacefake/weights/vncorenlp/models/ner/vi-ner.xz
deepfacefake/weights/vncorenlp/models/ner/vi-pretrainedembeddings.xz
deepfacefake/weights/vncorenlp/models/postagger/vi-tagger
deepfacefake/weights/vncorenlp/models/wordsegmenter/vi-vocab
deepfacefake/weights/vncorenlp/models/wordsegmenter/wordsegmenter.rdr
deepfacefake/weights/voices/encoder.pt
deepfacefake/weights/voices/synthesizer.pt
deepfacefake/weights/voices/vocoder.pt
